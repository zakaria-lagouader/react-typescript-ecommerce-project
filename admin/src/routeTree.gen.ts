/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AdminIndexImport } from './routes/admin/index'
import { Route as AdminProductsIndexImport } from './routes/admin/products/index'
import { Route as AdminProductsCreateImport } from './routes/admin/products/create'
import { Route as AdminAuthRegisterImport } from './routes/admin/auth/register'
import { Route as AdminAuthLoginImport } from './routes/admin/auth/login'

// Create/Update Routes

const AdminIndexRoute = AdminIndexImport.update({
  id: '/admin/',
  path: '/admin/',
  getParentRoute: () => rootRoute,
} as any)

const AdminProductsIndexRoute = AdminProductsIndexImport.update({
  id: '/admin/products/',
  path: '/admin/products/',
  getParentRoute: () => rootRoute,
} as any)

const AdminProductsCreateRoute = AdminProductsCreateImport.update({
  id: '/admin/products/create',
  path: '/admin/products/create',
  getParentRoute: () => rootRoute,
} as any)

const AdminAuthRegisterRoute = AdminAuthRegisterImport.update({
  id: '/admin/auth/register',
  path: '/admin/auth/register',
  getParentRoute: () => rootRoute,
} as any)

const AdminAuthLoginRoute = AdminAuthLoginImport.update({
  id: '/admin/auth/login',
  path: '/admin/auth/login',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/admin/': {
      id: '/admin/'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminIndexImport
      parentRoute: typeof rootRoute
    }
    '/admin/auth/login': {
      id: '/admin/auth/login'
      path: '/admin/auth/login'
      fullPath: '/admin/auth/login'
      preLoaderRoute: typeof AdminAuthLoginImport
      parentRoute: typeof rootRoute
    }
    '/admin/auth/register': {
      id: '/admin/auth/register'
      path: '/admin/auth/register'
      fullPath: '/admin/auth/register'
      preLoaderRoute: typeof AdminAuthRegisterImport
      parentRoute: typeof rootRoute
    }
    '/admin/products/create': {
      id: '/admin/products/create'
      path: '/admin/products/create'
      fullPath: '/admin/products/create'
      preLoaderRoute: typeof AdminProductsCreateImport
      parentRoute: typeof rootRoute
    }
    '/admin/products/': {
      id: '/admin/products/'
      path: '/admin/products'
      fullPath: '/admin/products'
      preLoaderRoute: typeof AdminProductsIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/admin': typeof AdminIndexRoute
  '/admin/auth/login': typeof AdminAuthLoginRoute
  '/admin/auth/register': typeof AdminAuthRegisterRoute
  '/admin/products/create': typeof AdminProductsCreateRoute
  '/admin/products': typeof AdminProductsIndexRoute
}

export interface FileRoutesByTo {
  '/admin': typeof AdminIndexRoute
  '/admin/auth/login': typeof AdminAuthLoginRoute
  '/admin/auth/register': typeof AdminAuthRegisterRoute
  '/admin/products/create': typeof AdminProductsCreateRoute
  '/admin/products': typeof AdminProductsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/admin/': typeof AdminIndexRoute
  '/admin/auth/login': typeof AdminAuthLoginRoute
  '/admin/auth/register': typeof AdminAuthRegisterRoute
  '/admin/products/create': typeof AdminProductsCreateRoute
  '/admin/products/': typeof AdminProductsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/admin'
    | '/admin/auth/login'
    | '/admin/auth/register'
    | '/admin/products/create'
    | '/admin/products'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/admin'
    | '/admin/auth/login'
    | '/admin/auth/register'
    | '/admin/products/create'
    | '/admin/products'
  id:
    | '__root__'
    | '/admin/'
    | '/admin/auth/login'
    | '/admin/auth/register'
    | '/admin/products/create'
    | '/admin/products/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AdminIndexRoute: typeof AdminIndexRoute
  AdminAuthLoginRoute: typeof AdminAuthLoginRoute
  AdminAuthRegisterRoute: typeof AdminAuthRegisterRoute
  AdminProductsCreateRoute: typeof AdminProductsCreateRoute
  AdminProductsIndexRoute: typeof AdminProductsIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  AdminIndexRoute: AdminIndexRoute,
  AdminAuthLoginRoute: AdminAuthLoginRoute,
  AdminAuthRegisterRoute: AdminAuthRegisterRoute,
  AdminProductsCreateRoute: AdminProductsCreateRoute,
  AdminProductsIndexRoute: AdminProductsIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/admin/",
        "/admin/auth/login",
        "/admin/auth/register",
        "/admin/products/create",
        "/admin/products/"
      ]
    },
    "/admin/": {
      "filePath": "admin/index.tsx"
    },
    "/admin/auth/login": {
      "filePath": "admin/auth/login.tsx"
    },
    "/admin/auth/register": {
      "filePath": "admin/auth/register.tsx"
    },
    "/admin/products/create": {
      "filePath": "admin/products/create.tsx"
    },
    "/admin/products/": {
      "filePath": "admin/products/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
