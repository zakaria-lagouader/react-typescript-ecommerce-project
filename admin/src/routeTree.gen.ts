/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as AdminGuestImport } from './routes/admin/_guest'
import { Route as AdminAuthenticatedImport } from './routes/admin/_authenticated'
import { Route as AdminAuthenticatedIndexImport } from './routes/admin/_authenticated/index'
import { Route as AdminGuestRegisterImport } from './routes/admin/_guest/register'
import { Route as AdminGuestLoginImport } from './routes/admin/_guest/login'
import { Route as AdminAuthenticatedProductsIndexImport } from './routes/admin/_authenticated/products/index'
import { Route as AdminAuthenticatedProductsCreateImport } from './routes/admin/_authenticated/products/create'
import { Route as AdminAuthenticatedProductsCategoriesIndexImport } from './routes/admin/_authenticated/products/categories/index'
import { Route as AdminAuthenticatedProductsCategoriesCreateImport } from './routes/admin/_authenticated/products/categories/create'

// Create Virtual Routes

const AdminImport = createFileRoute('/admin')()

// Create/Update Routes

const AdminRoute = AdminImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AdminGuestRoute = AdminGuestImport.update({
  id: '/_guest',
  getParentRoute: () => AdminRoute,
} as any)

const AdminAuthenticatedRoute = AdminAuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => AdminRoute,
} as any)

const AdminAuthenticatedIndexRoute = AdminAuthenticatedIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AdminAuthenticatedRoute,
} as any)

const AdminGuestRegisterRoute = AdminGuestRegisterImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => AdminGuestRoute,
} as any)

const AdminGuestLoginRoute = AdminGuestLoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AdminGuestRoute,
} as any)

const AdminAuthenticatedProductsIndexRoute =
  AdminAuthenticatedProductsIndexImport.update({
    id: '/products/',
    path: '/products/',
    getParentRoute: () => AdminAuthenticatedRoute,
  } as any)

const AdminAuthenticatedProductsCreateRoute =
  AdminAuthenticatedProductsCreateImport.update({
    id: '/products/create',
    path: '/products/create',
    getParentRoute: () => AdminAuthenticatedRoute,
  } as any)

const AdminAuthenticatedProductsCategoriesIndexRoute =
  AdminAuthenticatedProductsCategoriesIndexImport.update({
    id: '/products/categories/',
    path: '/products/categories/',
    getParentRoute: () => AdminAuthenticatedRoute,
  } as any)

const AdminAuthenticatedProductsCategoriesCreateRoute =
  AdminAuthenticatedProductsCategoriesCreateImport.update({
    id: '/products/categories/create',
    path: '/products/categories/create',
    getParentRoute: () => AdminAuthenticatedRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/admin': {
      id: '/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminImport
      parentRoute: typeof rootRoute
    }
    '/admin/_authenticated': {
      id: '/admin/_authenticated'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminAuthenticatedImport
      parentRoute: typeof AdminRoute
    }
    '/admin/_guest': {
      id: '/admin/_guest'
      path: ''
      fullPath: '/admin'
      preLoaderRoute: typeof AdminGuestImport
      parentRoute: typeof AdminImport
    }
    '/admin/_guest/login': {
      id: '/admin/_guest/login'
      path: '/login'
      fullPath: '/admin/login'
      preLoaderRoute: typeof AdminGuestLoginImport
      parentRoute: typeof AdminGuestImport
    }
    '/admin/_guest/register': {
      id: '/admin/_guest/register'
      path: '/register'
      fullPath: '/admin/register'
      preLoaderRoute: typeof AdminGuestRegisterImport
      parentRoute: typeof AdminGuestImport
    }
    '/admin/_authenticated/': {
      id: '/admin/_authenticated/'
      path: '/'
      fullPath: '/admin/'
      preLoaderRoute: typeof AdminAuthenticatedIndexImport
      parentRoute: typeof AdminAuthenticatedImport
    }
    '/admin/_authenticated/products/create': {
      id: '/admin/_authenticated/products/create'
      path: '/products/create'
      fullPath: '/admin/products/create'
      preLoaderRoute: typeof AdminAuthenticatedProductsCreateImport
      parentRoute: typeof AdminAuthenticatedImport
    }
    '/admin/_authenticated/products/': {
      id: '/admin/_authenticated/products/'
      path: '/products'
      fullPath: '/admin/products'
      preLoaderRoute: typeof AdminAuthenticatedProductsIndexImport
      parentRoute: typeof AdminAuthenticatedImport
    }
    '/admin/_authenticated/products/categories/create': {
      id: '/admin/_authenticated/products/categories/create'
      path: '/products/categories/create'
      fullPath: '/admin/products/categories/create'
      preLoaderRoute: typeof AdminAuthenticatedProductsCategoriesCreateImport
      parentRoute: typeof AdminAuthenticatedImport
    }
    '/admin/_authenticated/products/categories/': {
      id: '/admin/_authenticated/products/categories/'
      path: '/products/categories'
      fullPath: '/admin/products/categories'
      preLoaderRoute: typeof AdminAuthenticatedProductsCategoriesIndexImport
      parentRoute: typeof AdminAuthenticatedImport
    }
  }
}

// Create and export the route tree

interface AdminAuthenticatedRouteChildren {
  AdminAuthenticatedIndexRoute: typeof AdminAuthenticatedIndexRoute
  AdminAuthenticatedProductsCreateRoute: typeof AdminAuthenticatedProductsCreateRoute
  AdminAuthenticatedProductsIndexRoute: typeof AdminAuthenticatedProductsIndexRoute
  AdminAuthenticatedProductsCategoriesCreateRoute: typeof AdminAuthenticatedProductsCategoriesCreateRoute
  AdminAuthenticatedProductsCategoriesIndexRoute: typeof AdminAuthenticatedProductsCategoriesIndexRoute
}

const AdminAuthenticatedRouteChildren: AdminAuthenticatedRouteChildren = {
  AdminAuthenticatedIndexRoute: AdminAuthenticatedIndexRoute,
  AdminAuthenticatedProductsCreateRoute: AdminAuthenticatedProductsCreateRoute,
  AdminAuthenticatedProductsIndexRoute: AdminAuthenticatedProductsIndexRoute,
  AdminAuthenticatedProductsCategoriesCreateRoute:
    AdminAuthenticatedProductsCategoriesCreateRoute,
  AdminAuthenticatedProductsCategoriesIndexRoute:
    AdminAuthenticatedProductsCategoriesIndexRoute,
}

const AdminAuthenticatedRouteWithChildren =
  AdminAuthenticatedRoute._addFileChildren(AdminAuthenticatedRouteChildren)

interface AdminGuestRouteChildren {
  AdminGuestLoginRoute: typeof AdminGuestLoginRoute
  AdminGuestRegisterRoute: typeof AdminGuestRegisterRoute
}

const AdminGuestRouteChildren: AdminGuestRouteChildren = {
  AdminGuestLoginRoute: AdminGuestLoginRoute,
  AdminGuestRegisterRoute: AdminGuestRegisterRoute,
}

const AdminGuestRouteWithChildren = AdminGuestRoute._addFileChildren(
  AdminGuestRouteChildren,
)

interface AdminRouteChildren {
  AdminAuthenticatedRoute: typeof AdminAuthenticatedRouteWithChildren
  AdminGuestRoute: typeof AdminGuestRouteWithChildren
}

const AdminRouteChildren: AdminRouteChildren = {
  AdminAuthenticatedRoute: AdminAuthenticatedRouteWithChildren,
  AdminGuestRoute: AdminGuestRouteWithChildren,
}

const AdminRouteWithChildren = AdminRoute._addFileChildren(AdminRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/admin': typeof AdminGuestRouteWithChildren
  '/admin/login': typeof AdminGuestLoginRoute
  '/admin/register': typeof AdminGuestRegisterRoute
  '/admin/': typeof AdminAuthenticatedIndexRoute
  '/admin/products/create': typeof AdminAuthenticatedProductsCreateRoute
  '/admin/products': typeof AdminAuthenticatedProductsIndexRoute
  '/admin/products/categories/create': typeof AdminAuthenticatedProductsCategoriesCreateRoute
  '/admin/products/categories': typeof AdminAuthenticatedProductsCategoriesIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/admin': typeof AdminAuthenticatedIndexRoute
  '/admin/login': typeof AdminGuestLoginRoute
  '/admin/register': typeof AdminGuestRegisterRoute
  '/admin/products/create': typeof AdminAuthenticatedProductsCreateRoute
  '/admin/products': typeof AdminAuthenticatedProductsIndexRoute
  '/admin/products/categories/create': typeof AdminAuthenticatedProductsCategoriesCreateRoute
  '/admin/products/categories': typeof AdminAuthenticatedProductsCategoriesIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/admin': typeof AdminRouteWithChildren
  '/admin/_authenticated': typeof AdminAuthenticatedRouteWithChildren
  '/admin/_guest': typeof AdminGuestRouteWithChildren
  '/admin/_guest/login': typeof AdminGuestLoginRoute
  '/admin/_guest/register': typeof AdminGuestRegisterRoute
  '/admin/_authenticated/': typeof AdminAuthenticatedIndexRoute
  '/admin/_authenticated/products/create': typeof AdminAuthenticatedProductsCreateRoute
  '/admin/_authenticated/products/': typeof AdminAuthenticatedProductsIndexRoute
  '/admin/_authenticated/products/categories/create': typeof AdminAuthenticatedProductsCategoriesCreateRoute
  '/admin/_authenticated/products/categories/': typeof AdminAuthenticatedProductsCategoriesIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/admin'
    | '/admin/login'
    | '/admin/register'
    | '/admin/'
    | '/admin/products/create'
    | '/admin/products'
    | '/admin/products/categories/create'
    | '/admin/products/categories'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/admin'
    | '/admin/login'
    | '/admin/register'
    | '/admin/products/create'
    | '/admin/products'
    | '/admin/products/categories/create'
    | '/admin/products/categories'
  id:
    | '__root__'
    | '/'
    | '/admin'
    | '/admin/_authenticated'
    | '/admin/_guest'
    | '/admin/_guest/login'
    | '/admin/_guest/register'
    | '/admin/_authenticated/'
    | '/admin/_authenticated/products/create'
    | '/admin/_authenticated/products/'
    | '/admin/_authenticated/products/categories/create'
    | '/admin/_authenticated/products/categories/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AdminRoute: typeof AdminRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AdminRoute: AdminRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/admin"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/admin": {
      "filePath": "admin",
      "children": [
        "/admin/_authenticated",
        "/admin/_guest"
      ]
    },
    "/admin/_authenticated": {
      "filePath": "admin/_authenticated.tsx",
      "parent": "/admin",
      "children": [
        "/admin/_authenticated/",
        "/admin/_authenticated/products/create",
        "/admin/_authenticated/products/",
        "/admin/_authenticated/products/categories/create",
        "/admin/_authenticated/products/categories/"
      ]
    },
    "/admin/_guest": {
      "filePath": "admin/_guest.tsx",
      "parent": "/admin",
      "children": [
        "/admin/_guest/login",
        "/admin/_guest/register"
      ]
    },
    "/admin/_guest/login": {
      "filePath": "admin/_guest/login.tsx",
      "parent": "/admin/_guest"
    },
    "/admin/_guest/register": {
      "filePath": "admin/_guest/register.tsx",
      "parent": "/admin/_guest"
    },
    "/admin/_authenticated/": {
      "filePath": "admin/_authenticated/index.tsx",
      "parent": "/admin/_authenticated"
    },
    "/admin/_authenticated/products/create": {
      "filePath": "admin/_authenticated/products/create.tsx",
      "parent": "/admin/_authenticated"
    },
    "/admin/_authenticated/products/": {
      "filePath": "admin/_authenticated/products/index.tsx",
      "parent": "/admin/_authenticated"
    },
    "/admin/_authenticated/products/categories/create": {
      "filePath": "admin/_authenticated/products/categories/create.tsx",
      "parent": "/admin/_authenticated"
    },
    "/admin/_authenticated/products/categories/": {
      "filePath": "admin/_authenticated/products/categories/index.tsx",
      "parent": "/admin/_authenticated"
    }
  }
}
ROUTE_MANIFEST_END */
