/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AdminIndexImport } from './routes/admin/index'
import { Route as AdminRegisterImport } from './routes/admin/register'
import { Route as AdminLoginImport } from './routes/admin/login'

// Create/Update Routes

const AdminIndexRoute = AdminIndexImport.update({
  id: '/admin/',
  path: '/admin/',
  getParentRoute: () => rootRoute,
} as any)

const AdminRegisterRoute = AdminRegisterImport.update({
  id: '/admin/register',
  path: '/admin/register',
  getParentRoute: () => rootRoute,
} as any)

const AdminLoginRoute = AdminLoginImport.update({
  id: '/admin/login',
  path: '/admin/login',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/admin/login': {
      id: '/admin/login'
      path: '/admin/login'
      fullPath: '/admin/login'
      preLoaderRoute: typeof AdminLoginImport
      parentRoute: typeof rootRoute
    }
    '/admin/register': {
      id: '/admin/register'
      path: '/admin/register'
      fullPath: '/admin/register'
      preLoaderRoute: typeof AdminRegisterImport
      parentRoute: typeof rootRoute
    }
    '/admin/': {
      id: '/admin/'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/admin/login': typeof AdminLoginRoute
  '/admin/register': typeof AdminRegisterRoute
  '/admin': typeof AdminIndexRoute
}

export interface FileRoutesByTo {
  '/admin/login': typeof AdminLoginRoute
  '/admin/register': typeof AdminRegisterRoute
  '/admin': typeof AdminIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/admin/login': typeof AdminLoginRoute
  '/admin/register': typeof AdminRegisterRoute
  '/admin/': typeof AdminIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/admin/login' | '/admin/register' | '/admin'
  fileRoutesByTo: FileRoutesByTo
  to: '/admin/login' | '/admin/register' | '/admin'
  id: '__root__' | '/admin/login' | '/admin/register' | '/admin/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AdminLoginRoute: typeof AdminLoginRoute
  AdminRegisterRoute: typeof AdminRegisterRoute
  AdminIndexRoute: typeof AdminIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  AdminLoginRoute: AdminLoginRoute,
  AdminRegisterRoute: AdminRegisterRoute,
  AdminIndexRoute: AdminIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/admin/login",
        "/admin/register",
        "/admin/"
      ]
    },
    "/admin/login": {
      "filePath": "admin/login.tsx"
    },
    "/admin/register": {
      "filePath": "admin/register.tsx"
    },
    "/admin/": {
      "filePath": "admin/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
